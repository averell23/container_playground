---
- name: Create flocker config dir
  file: name=/etc/flocker state=directory mode=0700

- stat: path=/etc/flocker/cluster.crt
  register: cluster_crt

- name: Generate cluster key
  command: flocker-ca initialize vcluster
  args:
    chdir: /etc/flocker
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Generate control certificate
  command: flocker-ca create-control-certificate {{flocker_controller.name}}
  args:
    chdir: /etc/flocker
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Generate client certificate
  command: flocker-ca create-api-certificate flocker-client
  args:
    chdir: /etc/flocker
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Generate node certificates
  # Yeah, don't look. This crap tool doesn't allow a non-random output filename. Go figure.
  # This will leave each crt file as <minion_name>.key and <minion_name>.crt
  shell: 'for file in `flocker-ca create-node-certificate | sed "s/^Created \([a-f0-9-]*\).crt.*$/\1/g"`.* ; do mv $file {{item.name}}.`echo $file | sed "s/^.*\(crt\|key\)$/\1/g"` ; done'
  args:
    chdir: /etc/flocker
  register: node_result
  with_items: "{{flocker_nodes}}"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Fetch certs and keys
  fetch: src="/etc/flocker/{{item}}" dest="../flocker_certs/{{item}}" flat=yes
  with_items:
    - cluster.crt
    - cluster.key
    - flocker-client.crt
    - flocker-client.key
    - "control-{{flocker_controller.name}}.key"
    - "control-{{flocker_controller.name}}.crt"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Fetch node certs
  fetch: src="/etc/flocker/{{item.name}}.crt" dest="../flocker_certs/{{item.name}}.crt" flat=yes
  with_items: "{{flocker_nodes}}"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Fetch node keys
  fetch: src="/etc/flocker/{{item.name}}.key" dest="../flocker_certs/{{item.name}}.key" flat=yes
  with_items: "{{flocker_nodes}}"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Remove unneeded certs and keys from server
  file: name=/etc/flocker/{{item}} state=absent
  with_items:
    - cluster.key
    - flocker-client.crt
    - flocker-client.key
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists

- name: Remove minion certs from server
  file: name=/etc/flocker/{{item.name}}.crt state=absent
  with_items: "{{flocker_nodes}}"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists


- name: Remove minion certs from server
  file: name=/etc/flocker/{{item.name}}.key state=absent
  with_items: "{{flocker_nodes}}"
  when: cluster_crt.stat.exists is not defined or not cluster_crt.stat.exists
